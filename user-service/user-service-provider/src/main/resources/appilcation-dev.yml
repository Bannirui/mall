mybatis-plus:
  mapper-locations: classpath:dal/mapper/*Mapper.xml
  type-aliases-package: com.example.mall.user.dal.model
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
    cache-enabled: false

spring:
  # mysql
  datasource:
    url: jdbc:mysql://localhost:3306/mall?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: 19920308
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
  # redis
  redis:
    database: 1
    host: 127.0.0.1
    port: 6379
    password: 19920308
    timeout: 300
    jedis:
      pool:
        max-active: 3000
        max-wait: -1
        max-idle: 8
        min-idle: 0
  # kafka
  kafka:
    # 集群配置：ip1:port,ip2:port
    bootstrapServers: 127.0.0.1:9092
    consumer:
      auto-offset-reset: latest
      key-serializer: org.apache.kafka.common.serialization.StringDeserializer
      value-serializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: com.example.mall.user.*
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

dubbo:
  scan:
    base-packages: com.example.mall.user.service
  application:
    name: ${spring.application.name}
  registry:
    address: nacos://127.0.0.1:8848?namespace=a4fb7fdd-b752-438a-bd66-75b9523d7633
  protocol:
    name: dubbo
